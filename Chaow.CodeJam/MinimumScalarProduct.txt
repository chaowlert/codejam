open System
open System.IO
open System.Linq
open System.Collections.Generic

let solve seq1 seq2 =
    let seq1 = seq1 |> Seq.sort
    let seq2 = seq2 |> Seq.sortBy (~-)    // Unary minus
    Seq.zip seq1 seq2 |> Seq.map (fun (a, b) -> int64 a * int64 b)
                      |> Seq.sum
                      |> string

[<EntryPoint>]
let main argv = 
    use input = new StreamReader(argv.[0])
    use output = new StreamWriter(argv.[1])

    let cases = input.ReadLine() |> int
    for i = 1 to cases do
        let len = input.ReadLine() |> int
        let txt1 = input.ReadLine()
        let seq1 = txt1.Split ' ' |> Seq.map int
        let txt2 = input.ReadLine()
        let seq2 = txt2.Split ' ' |> Seq.map int
        let answer = solve seq1 seq2

        printfn "Case #%i: %s" i answer
        fprintfn output "Case #%i: %s" i answer

    input.Close()
    output.Close()

    if System.Diagnostics.Debugger.IsAttached then
        Console.ReadLine() |> ignore

    0 
